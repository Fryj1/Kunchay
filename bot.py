import logging
import json
from telegram import Update, WebAppInfo, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    ConversationHandler,
    filters,
)

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
BOT_TOKEN = "8060994531:AAHISQsaPDKIJvPKzV4nIgng5uBK090bfa8"
# !!! –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –≤–∞—à–µ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å HTTPS)
WEB_APP_URL = 'https://your-webapp-url.com' 
# !!! –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —á–∏—Å–ª–æ–≤–æ–π Chat ID –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
ADMIN_CHAT_ID = 1184828261 
TG_USERNAME = "@fryj1"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∏–∞–ª–æ–≥–∞
FLAVOR, EFFECT = range(2)

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–∏–∞–ª–æ–≥–∞ ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start."""
    user = update.effective_user
    await update.message.reply_html(
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.mention_html()}! üëã\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –∫–∏—Ç–∞–π—Å–∫–∏–π —á–∞–π. "
        "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞, —á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è.",
    )
    
    reply_keyboard = [["–§—Ä—É–∫—Ç–æ–≤—ã–π/–¶–≤–µ—Ç–æ—á–Ω—ã–π", "–î—Ä–µ–≤–µ—Å–Ω—ã–π/–û—Ä–µ—Ö–æ–≤—ã–π"]]
    await update.message.reply_text(
        "–ö–∞–∫–æ–π –≤–∫—É—Å –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, resize_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∫—É—Å"
        ),
    )
    return FLAVOR

async def flavor(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≤–∫—É—Å–∞ –∏ –∑–∞–¥–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å."""
    user_choice = update.message.text
    context.user_data['flavor'] = user_choice
    
    reply_keyboard = [["–ë–æ–¥—Ä–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—è", "–†–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ –∏ –ø–æ–∫–æ–π"]]
    await update.message.reply_text(
        "–û—Ç–ª–∏—á–Ω–æ! –ê –∫–∞–∫–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞ –≤—ã –∂–¥–µ—Ç–µ –æ—Ç —á–∞—è?",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, resize_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç"
        ),
    )
    return EFFECT

async def recommend_and_show_shop(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–î–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω."""
    flavor_choice = context.user_data.get('flavor')
    effect_choice = update.message.text

    recommendation = ""
    if "–§—Ä—É–∫—Ç–æ–≤—ã–π" in flavor_choice and "–ë–æ–¥—Ä–æ—Å—Ç—å" in effect_choice:
        recommendation = "–í–∞–º –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥–æ–π–¥—É—Ç –Ω–∞—à–∏ –®–µ–Ω –ü—É—ç—Ä—ã! –£ –Ω–∏—Ö —è—Ä–∫–∏–π –≤–∫—É—Å –∏ –æ–Ω–∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ —Ç–æ–Ω–∏–∑–∏—Ä—É—é—Ç."
    elif "–î—Ä–µ–≤–µ—Å–Ω—ã–π" in flavor_choice and "–†–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ" in effect_choice:
        recommendation = "–†–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤—ã–¥–µ—Ä–∂–∞–Ω–Ω—ã–µ –®—É –ü—É—ç—Ä—ã. –ò—Ö –≥–ª—É–±–æ–∫–∏–π –≤–∫—É—Å –∏ —Å–æ–≥—Ä–µ–≤–∞—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç ‚Äî —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Å–ø–æ–∫–æ–π–Ω–æ–≥–æ –≤–µ—á–µ—Ä–∞."
    else:
        recommendation = "–£ –Ω–∞—Å –±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä, –∏ —è —É–≤–µ—Ä–µ–Ω, –≤—ã –Ω–∞–π–¥–µ—Ç–µ —á—Ç–æ-—Ç–æ –ø–æ –¥—É—à–µ!"

    await update.message.reply_text(
        f"–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã!\n\n{recommendation}\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç, –∏–∑—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –≤ –Ω–∞—à–µ–π —É–¥–æ–±–Ω–æ–π —á–∞–π–Ω–æ–π –ª–∞–≤–∫–µ. "
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá"
    )

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Web App
    keyboard = [[KeyboardButton("K≈´nchayShop", web_app=WebAppInfo(url=WEB_APP_URL))]]
    await update.message.reply_text(
        "–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω:",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )
    
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç –¥–∏–∞–ª–æ–≥."""
    await update.message.reply_text("–•–æ—Ä–æ—à–æ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /start.")
    return ConversationHandler.END


# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App ---

async def web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç Web App."""
    try:
        data = json.loads(update.effective_message.web_app_data.data)
        user = update.effective_user
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ
        order_items_text = ""
        for item in data['items']:
            order_items_text += f"   - {item['name']} (–ê—Ä—Ç: {item['id']})\n"
            order_items_text += f"     –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item['quantity']} —à—Ç.\n"
            order_items_text += f"     –¶–µ–Ω–∞: {item['price']:,} ‚ÇΩ\n\n".replace(',', ' ')

        total_price_formatted = f"{data['totalPrice']:,}".replace(',', ' ')
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = (
            f"üë§ <b>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:</b> {user.full_name}\n"
            f"   - ID: {user.id}\n"
            f"   - Username: @{user.username if user.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}"
        )
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        message_to_admin = (
            f"üéâ <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!</b> üéâ\n\n"
            f"{user_info}\n\n"
            f"üì¶ <b>–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:</b>\n"
            f"{order_items_text}"
            f"üí∞ <b>–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {total_price_formatted} ‚ÇΩ</b>\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=message_to_admin, parse_mode='HTML')
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
        await update.message.reply_text(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –µ–≥–æ –∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π. "
            f"–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É: {TG_USERNAME}"
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp: {e}")
        await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏.")


# --- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ---

def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    application = Application.builder().token(BOT_TOKEN).build()

    # –°–æ–∑–¥–∞–µ–º ConversationHandler –¥–ª—è –æ–ø—Ä–æ—Å–∞
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            FLAVOR: [MessageHandler(filters.Regex("^(–§—Ä—É–∫—Ç–æ–≤—ã–π/–¶–≤–µ—Ç–æ—á–Ω—ã–π|–î—Ä–µ–≤–µ—Å–Ω—ã–π/–û—Ä–µ—Ö–æ–≤—ã–π)$"), flavor)],
            EFFECT: [MessageHandler(filters.Regex("^(–ë–æ–¥—Ä–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—è|–†–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ –∏ –ø–æ–∫–æ–π)$"), recommend_and_show_shop)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    application.add_handler(conv_handler)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, web_app_data))
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()