import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig(({ command }) => {
  const config = {
    plugins: [react()],
    base: '/',
  }

  if (command !== 'serve') {
    // –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ 'tea-shop-webapp' –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞ GitHub
    config.base = '/tea-shop-webapp/' 
  }

  return config
})

GEMINI_API_KEY=PLACEHOLDER_API_KEY

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?


import React, { useState, useEffect, useCallback } from 'react';
import { useTelegram } from './hooks/useTelegram';
import { allTeaCategories } from './constants';
import type { CartItem, Tea, TeaCategory } from './types';
import CategoryView from './components/CategoryView';
import ProductListView from './components/ProductListView';
import Cart from './components/Cart';
import { TeaIcon } from './components/Icons';

const App: React.FC = () => {
    const [cart, setCart] = useState<CartItem[]>([]);
    const [selectedCategory, setSelectedCategory] = useState<TeaCategory | null>(null);
    const [isCartOpen, setIsCartOpen] = useState(false);

    const { tg, user } = useTelegram();

    const onMainButtonClick = useCallback(() => {
        if (!cart.length) return;
        
        const orderData = {
            items: cart.map(item => ({
                id: item.id,
                name: item.name,
                quantity: item.quantity,
                price: item.price,
            })),
            totalPrice: calculateTotal(),
            user: user,
        };

        tg.sendData(JSON.stringify(orderData));
    }, [cart, user, tg]);

    useEffect(() => {
        tg.ready();
    }, [tg]);

    const calculateTotal = () => {
        return cart.reduce((total, item) => total + item.price * item.quantity, 0);
    };

    useEffect(() => {
        if (isCartOpen) {
            tg.MainButton.hide();
            return;
        }

        if (cart.length > 0) {
            tg.MainButton.setText(`–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑: ${calculateTotal().toLocaleString('ru-RU')} ‚ÇΩ`);
            tg.MainButton.show();
        } else {
            tg.MainButton.hide();
        }

        tg.onEvent('mainButtonClicked', onMainButtonClick);
        return () => {
            tg.offEvent('mainButtonClicked', onMainButtonClick);
        };
    }, [cart, tg, onMainButtonClick, isCartOpen]);


    const addToCart = (tea: Tea) => {
        setCart(prevCart => {
            const existingItem = prevCart.find(item => item.id === tea.id);
            if (existingItem) {
                return prevCart.map(item =>
                    item.id === tea.id ? { ...item, quantity: item.quantity + 1 } : item
                );
            }
            return [...prevCart, { ...tea, quantity: 1 }];
        });
    };

    const updateQuantity = (teaId: number, newQuantity: number) => {
        if (newQuantity <= 0) {
            setCart(prevCart => prevCart.filter(item => item.id !== teaId));
        } else {
            setCart(prevCart =>
                prevCart.map(item =>
                    item.id === teaId ? { ...item, quantity: newQuantity } : item
                )
            );
        }
    };
    
    const handleSelectCategory = (category: TeaCategory) => {
        setSelectedCategory(category);
    };

    const handleBack = () => {
        setSelectedCategory(null);
    };

    const handleCheckout = () => {
        setIsCartOpen(false);
        onMainButtonClick();
    }
    
    return (
        <div className="bg-[var(--tg-theme-bg-color)] text-[var(--tg-theme-text-color)] min-h-screen font-sans">
            <header className="p-4 sticky top-0 bg-[var(--tg-theme-secondary-bg-color)] shadow-md z-10 text-center">
                 <h1 className="text-2xl font-bold flex items-center justify-center gap-2">
                    <TeaIcon />
                    –ß–∞–π–Ω–∞—è –õ–∞–≤–∫–∞
                </h1>
            </header>
            
            <main className="p-4 pb-32">
                {!selectedCategory ? (
                    <CategoryView categories={allTeaCategories} onSelectCategory={handleSelectCategory} />
                ) : (
                    <ProductListView 
                        category={selectedCategory} 
                        onBack={handleBack}
                        cart={cart}
                        addToCart={addToCart}
                        updateQuantity={updateQuantity}
                    />
                )}
            </main>

            <Cart 
                cart={cart}
                isOpen={isCartOpen}
                setIsOpen={setIsCartOpen}
                updateQuantity={updateQuantity}
                onCheckout={handleCheckout}
            />
        </div>
    );
};

export default App;

import logging
import json
from telegram import Update, WebAppInfo, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    ConversationHandler,
    filters,
)

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
BOT_TOKEN = "8060994531:AAHISQsaPDKIJvPKzV4nIgng5uBK090bfa8"
# !!! –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –≤–∞—à–µ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å HTTPS)
WEB_APP_URL = 'https://your-webapp-url.com' 
# !!! –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —á–∏—Å–ª–æ–≤–æ–π Chat ID –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
ADMIN_CHAT_ID = 1184828261 
TG_USERNAME = "@fryj1"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∏–∞–ª–æ–≥–∞
FLAVOR, EFFECT = range(2)

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–∏–∞–ª–æ–≥–∞ ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start."""
    user = update.effective_user
    await update.message.reply_html(
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.mention_html()}! üëã\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –∫–∏—Ç–∞–π—Å–∫–∏–π —á–∞–π. "
        "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞, —á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è.",
    )
    
    reply_keyboard = [["–§—Ä—É–∫—Ç–æ–≤—ã–π/–¶–≤–µ—Ç–æ—á–Ω—ã–π", "–î—Ä–µ–≤–µ—Å–Ω—ã–π/–û—Ä–µ—Ö–æ–≤—ã–π"]]
    await update.message.reply_text(
        "–ö–∞–∫–æ–π –≤–∫—É—Å –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, resize_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∫—É—Å"
        ),
    )
    return FLAVOR

async def flavor(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≤–∫—É—Å–∞ –∏ –∑–∞–¥–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å."""
    user_choice = update.message.text
    context.user_data['flavor'] = user_choice
    
    reply_keyboard = [["–ë–æ–¥—Ä–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—è", "–†–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ –∏ –ø–æ–∫–æ–π"]]
    await update.message.reply_text(
        "–û—Ç–ª–∏—á–Ω–æ! –ê –∫–∞–∫–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞ –≤—ã –∂–¥–µ—Ç–µ –æ—Ç —á–∞—è?",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, resize_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç"
        ),
    )
    return EFFECT

async def recommend_and_show_shop(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–î–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω."""
    flavor_choice = context.user_data.get('flavor')
    effect_choice = update.message.text

    recommendation = ""
    if "–§—Ä—É–∫—Ç–æ–≤—ã–π" in flavor_choice and "–ë–æ–¥—Ä–æ—Å—Ç—å" in effect_choice:
        recommendation = "–í–∞–º –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥–æ–π–¥—É—Ç –Ω–∞—à–∏ –®–µ–Ω –ü—É—ç—Ä—ã! –£ –Ω–∏—Ö —è—Ä–∫–∏–π –≤–∫—É—Å –∏ –æ–Ω–∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ —Ç–æ–Ω–∏–∑–∏—Ä—É—é—Ç."
    elif "–î—Ä–µ–≤–µ—Å–Ω—ã–π" in flavor_choice and "–†–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ" in effect_choice:
        recommendation = "–†–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤—ã–¥–µ—Ä–∂–∞–Ω–Ω—ã–µ –®—É –ü—É—ç—Ä—ã. –ò—Ö –≥–ª—É–±–æ–∫–∏–π –≤–∫—É—Å –∏ —Å–æ–≥—Ä–µ–≤–∞—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç ‚Äî —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Å–ø–æ–∫–æ–π–Ω–æ–≥–æ –≤–µ—á–µ—Ä–∞."
    else:
        recommendation = "–£ –Ω–∞—Å –±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä, –∏ —è —É–≤–µ—Ä–µ–Ω, –≤—ã –Ω–∞–π–¥–µ—Ç–µ —á—Ç–æ-—Ç–æ –ø–æ –¥—É—à–µ!"

    await update.message.reply_text(
        f"–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã!\n\n{recommendation}\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç, –∏–∑—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –≤ –Ω–∞—à–µ–π —É–¥–æ–±–Ω–æ–π —á–∞–π–Ω–æ–π –ª–∞–≤–∫–µ. "
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá"
    )

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Web App
    keyboard = [[KeyboardButton("K≈´nchayShop", web_app=WebAppInfo(url=WEB_APP_URL))]]
    await update.message.reply_text(
        "–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω:",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )
    
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç –¥–∏–∞–ª–æ–≥."""
    await update.message.reply_text("–•–æ—Ä–æ—à–æ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /start.")
    return ConversationHandler.END


# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App ---

async def web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç Web App."""
    try:
        data = json.loads(update.effective_message.web_app_data.data)
        user = update.effective_user
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ
        order_items_text = ""
        for item in data['items']:
            order_items_text += f"   - {item['name']} (–ê—Ä—Ç: {item['id']})\n"
            order_items_text += f"     –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item['quantity']} —à—Ç.\n"
            order_items_text += f"     –¶–µ–Ω–∞: {item['price']:,} ‚ÇΩ\n\n".replace(',', ' ')

        total_price_formatted = f"{data['totalPrice']:,}".replace(',', ' ')
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = (
            f"üë§ <b>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:</b> {user.full_name}\n"
            f"   - ID: {user.id}\n"
            f"   - Username: @{user.username if user.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}"
        )
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        message_to_admin = (
            f"üéâ <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!</b> üéâ\n\n"
            f"{user_info}\n\n"
            f"üì¶ <b>–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:</b>\n"
            f"{order_items_text}"
            f"üí∞ <b>–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {total_price_formatted} ‚ÇΩ</b>\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=message_to_admin, parse_mode='HTML')
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
        await update.message.reply_text(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –µ–≥–æ –∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π. "
            f"–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É: {TG_USERNAME}"
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp: {e}")
        await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏.")


# --- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ---

def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    application = Application.builder().token(BOT_TOKEN).build()

    # –°–æ–∑–¥–∞–µ–º ConversationHandler –¥–ª—è –æ–ø—Ä–æ—Å–∞
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            FLAVOR: [MessageHandler(filters.Regex("^(–§—Ä—É–∫—Ç–æ–≤—ã–π/–¶–≤–µ—Ç–æ—á–Ω—ã–π|–î—Ä–µ–≤–µ—Å–Ω—ã–π/–û—Ä–µ—Ö–æ–≤—ã–π)$"), flavor)],
            EFFECT: [MessageHandler(filters.Regex("^(–ë–æ–¥—Ä–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—è|–†–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ –∏ –ø–æ–∫–æ–π)$"), recommend_and_show_shop)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    application.add_handler(conv_handler)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, web_app_data))
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()

import type { TeaCategory } from './types';

export const teaCategories: TeaCategory[] = [
    {
        name: '–®–µ–Ω –ü—É—ç—Ä—ã',
        imageUrl: 'https://picsum.photos/seed/shengpuerh/800/400',
        teas: [
            {
                id: 1001,
                name: '–ü—É—ç—Ä –∏–∑ ¬´–¥–µ—Ä–µ–≤—å–µ–≤¬ª',
                type: '–®—ç–Ω –ü—É—ç—Ä',
                form: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø—Ä–µ—Å—Å–æ–≤–∫–∞ –≤ –≤–∏–¥–µ –ª–µ–ø–µ—à–∫–∏',
                rawMaterial: '–í–µ—Å–Ω–∞ 2023',
                aging: '1 –≥–æ–¥',
                color: '–°–≤–µ—Ç–ª–æ-–∑–æ–ª–æ—Ç–∏—Å—Ç—ã–π, –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π',
                bouquet: '–Ø—Ä–∫–∏–π, –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π ‚Äî —Ü–≤–µ—Ç–æ—á–Ω—ã–µ –Ω–æ—Ç—ã, –ª–∏–ø—ã, –º–µ–¥, –ª–µ–≥–∫–∏–π –¥—Ä–µ–≤–µ—Å–Ω—ã–π –æ—Ç—Ç–µ–Ω–æ–∫.',
                aftertaste: '–°–ª–∞–¥–∫–æ–≤–∞—Ç–æ–µ, –¥–æ–ª–≥–æ–µ, –æ—Ö–ª–∞–∂–¥–∞—é—â–µ–µ, —Å –ø—Ä–∏—è—Ç–Ω–æ–π —Ç–µ—Ä–ø–∫–æ—Å—Ç—å—é –Ω–∞ —è–∑—ã–∫–µ.',
                price: 2400,
                imageUrl: 'https://picsum.photos/seed/puer1001/400/400'
            },
            {
                id: 1002,
                name: '–ü—É—ç—Ä ¬´–ë–∏–Ω –î–∞–æ –ò–Ω–æ–º—É¬ª',
                type: '–®—ç–Ω –ü—É—ç—Ä',
                form: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø—Ä–µ—Å—Å–æ–≤–∫–∞ –≤ –≤–∏–¥–µ –ª–µ–ø–µ—à–∫–∏',
                rawMaterial: '–í–µ—Å–Ω–∞ 2024',
                aging: '–ú–æ–ª–æ–¥–æ–π, –º–µ–Ω–µ–µ 1 –≥–æ–¥–∞',
                color: '–°–≤–µ—Ç–ª–æ-–∑–æ–ª–æ—Ç–∏—Å—Ç—ã–π, –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π',
                bouquet: '–Ø—Ä–∫–∏–π, –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π ‚Äî —Ü–≤–µ—Ç–æ—á–Ω—ã–µ –Ω–æ—Ç—ã, –ª–∏–ø—ã, –º–µ–¥, –ª–µ–≥–∫–∏–π –¥—Ä–µ–≤–µ—Å–Ω—ã–π –æ—Ç—Ç–µ–Ω–æ–∫.',
                aftertaste: '–°–ª–∞–¥–∫–æ–µ, –¥–æ–ª–≥–æ–µ, —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –ø—Ä–æ–ø–∞–¥–∞–Ω–∏—è (–ø—É—Å—Ç–æ—Ç—ã), –ø—Ä–æ—Ö–ª–∞–¥–∞ –≤–æ —Ä—Ç—É, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –¥–æ 10‚Äì12 –ø—Ä–æ–ª–∏–≤–æ–≤.',
                price: 3100,
                imageUrl: 'https://picsum.photos/seed/puer1002/400/400'
            }
        ]
    },
    {
        name: '–®—É –ü—É—ç—Ä—ã',
        imageUrl: 'https://picsum.photos/seed/shupuerh/800/400',
        teas: [
            {
                id: 1003,
                name: '–ü—É—ç—Ä ¬´–ë–∞–Ω—å —á–∂–∞–Ω –ª–∞–æ —à—É¬ª',
                type: '–®—É –ü—É—ç—Ä',
                form: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø—Ä–µ—Å—Å–æ–≤–∫–∞ –≤ –≤–∏–¥–µ –ª–µ–ø–µ—à–∫–∏',
                rawMaterial: '–í–µ—Å–Ω–∞ 2009',
                aging: '–°—ã—Ä—å–µ 2009 –≥–æ–¥–∞, —Ñ–µ—Ä–º–µ–Ω—Ç–∞—Ü–∏—è –∏ –ø—Ä–µ—Å—Å–æ–≤–∫–∞ ‚Äî 2015 –≥–æ–¥',
                color: '–¢–µ–º–Ω–æ-—Ä—É–±–∏–Ω–æ–≤—ã–π',
                bouquet: '–í –∞—Ä–æ–º–∞—Ç–µ –¥–æ–º–∏–Ω–∏—Ä—É—é—Ç –¥—Ä–µ–≤–µ—Å–Ω—ã–µ –∏ –∑–µ–º–ª—è–Ω—ã–µ –Ω–æ—Ç—ã, –ª–µ–≥–∫–∏–π —à–ª–µ–π—Ñ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤ –∏ –∫–∞–º—Ñ–æ—Ä—ã.',
                aftertaste: '–ì–ª—É–±–æ–∫–æ–µ, –º–∞—Å–ª—è–Ω–∏—Å—Ç–æ–µ, —Å –±–∞—Ä—Ö–∞—Ç–∏—Å—Ç–æ–π —Å–ª–∞–¥–æ—Å—Ç—å—é –∏ –ª–µ–≥–∫–∏–º –æ—Ö–ª–∞–∂–¥–∞—é—â–∏–º —ç—Ñ—Ñ–µ–∫—Ç–æ–º.',
                price: 4500,
                imageUrl: 'https://picsum.photos/seed/puer1003/400/400'
            },
            {
                id: 1004,
                name: '–ü—É—ç—Ä ¬´–ë–∏–Ω –î–∞–æ –õ–µ–¥—è–Ω–æ–π –æ—Å—Ç—Ä–æ–≤¬ª',
                type: '–®—É –ü—É—ç—Ä',
                form: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø—Ä–µ—Å—Å–æ–≤–∫–∞ –≤ –≤–∏–¥–µ –ª–µ–ø–µ—à–∫–∏',
                rawMaterial: '–í–µ—Å–µ–Ω–Ω–∏–π',
                aging: '–ë–æ–ª–µ–µ 10 –ª–µ—Ç (—Å 2012 –≥–æ–¥–∞)',
                color: '–ì—É—Å—Ç–æ–π, —Ç–µ–º–Ω–æ-—Ä—É–±–∏–Ω–æ–≤—ã–π, –º–∞—Å–ª—è–Ω–∏—Å—Ç—ã–π',
                bouquet: '–ù–æ—Ç—ã –¥—Ä–µ–≤–µ—Å–Ω–æ–π –∫–æ—Ä—ã, –∫–æ–∂–∏, —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤ –∏ –∫–∞–º—Ñ–æ—Ä–Ω–æ–π –∑–µ–º–ª–∏. –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —á–µ—Ç–∫–∏–µ –æ—Ä–µ—Ö–æ–≤—ã–µ –Ω—é–∞–Ω—Å—ã –∏ –µ–¥–≤–∞ —É–ª–æ–≤–∏–º—ã–µ —Å–ª–∞–¥–æ—Å—Ç–∏.',
                aftertaste: '–ë–∞—Ä—Ö–∞—Ç–Ω–æ–µ, –¥–æ–ª–≥–æ–µ –∏ —Å–æ–≥—Ä–µ–≤–∞—é—â–µ–µ, —Å –º–∏–Ω–¥–∞–ª—å–Ω–æ-—à–æ–∫–æ–ª–∞–¥–Ω—ã–º –æ—Ç—Ç–µ–Ω–∫–æ–º –∏ –ª–µ–≥–∫–æ–π –ø—Ä—è–Ω–æ—Å—Ç—å—é.',
                price: 5200,
                imageUrl: 'https://picsum.photos/seed/puer1004/400/400'
            },
            {
                id: 1005,
                name: '–ü—É—ç—Ä ¬´–Æ–Ω—ã–Ω–∞–Ω—Å–∫–∏–µ —Å–µ–º–∏–¥–µ—Å—è—Ç—ã–µ –ª–µ–ø–µ—à–∫–∏¬ª (2006 –≥.)',
                type: '–®—É –ü—É—ç—Ä',
                form: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø—Ä–µ—Å—Å–æ–≤–∫–∞ –≤ –≤–∏–¥–µ –ª–µ–ø–µ—à–∫–∏',
                rawMaterial: '–í–µ—Å–Ω–∞ 2006 –≥–æ–¥–∞',
                aging: '–ë–æ–ª–µ–µ 18 –ª–µ—Ç',
                color: '–ì–ª—É–±–æ–∫–∏–π –∫—Ä–∞—Å–Ω–æ-–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π, –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π',
                bouquet: '–¢–µ—Ä–ø–∫–∏–π, —Å –Ω–æ—Ç–∞–º–∏ –¥—Ä–µ–≤–µ—Å–∏–Ω—ã, —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤ –∏ –ª–µ–≥–∫–æ–π —ç–ª–∏—Ç–Ω–æ–π –ø–ª–µ—Å–µ–Ω–∏, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ–π –¥–ª—è –≤—ã–¥–µ—Ä–∂–∞–Ω–Ω—ã—Ö —à—É –ø—É—ç—Ä–æ–≤.',
                aftertaste: '–î–æ–ª–≥–æ–µ, —Å –º–µ–¥–æ–≤–æ-–ø—Ä—è–Ω—ã–º–∏ –æ—Ç—Ç–µ–Ω–∫–∞–º–∏.',
                price: 7800,
                imageUrl: 'https://picsum.photos/seed/puer1005/400/400'
            },
            {
                id: 1006,
                name: '–ü—É—ç—Ä ¬´–õ–∞–æ –ß–∞ –¢–æ—É¬ª –≤—ã–¥–µ—Ä–∂–∞–Ω–Ω—ã–π (2003 –≥.)',
                type: '–®—É –ü—É—ç—Ä',
                form: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø—Ä–µ—Å—Å–æ–≤–∫–∞ –≤ –≤–∏–¥–µ –ª–µ–ø–µ—à–∫–∏',
                rawMaterial: '–°–º–µ—Å—å —Å–µ–∑–æ–Ω–æ–≤',
                aging: '–ë–æ–ª–µ–µ 20 –ª–µ—Ç',
                color: '–°–≤–µ—Ç–ª–æ-–∑–æ–ª–æ—Ç–∏—Å—Ç—ã–π, –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π',
                bouquet: '–í –∞—Ä–æ–º–∞—Ç–µ –¥–æ–º–∏–Ω–∏—Ä—É—é—Ç –¥—Ä–µ–≤–µ—Å–Ω—ã–µ –∏ –∑–µ–º–ª—è–Ω—ã–µ –Ω–æ—Ç—ã, –ª–µ–≥–∫–∏–π —à–ª–µ–π—Ñ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤ –∏ –∫–∞–º—Ñ–æ—Ä—ã.',
                aftertaste: '–ì–ª—É–±–æ–∫–æ–µ, –º–∞—Å–ª—è–Ω–∏—Å—Ç–æ–µ, —Å –±–∞—Ä—Ö–∞—Ç–∏—Å—Ç–æ–π —Å–ª–∞–¥–æ—Å—Ç—å—é –∏ –ª–µ–≥–∫–∏–º –æ—Ö–ª–∞–∂–¥–∞—é—â–∏–º —ç—Ñ—Ñ–µ–∫—Ç–æ–º.',
                price: 9500,
                imageUrl: 'https://picsum.photos/seed/puer1006/400/400'
            }
        ]
    }
];

const allTeas = teaCategories.flatMap(category => category.teas);

// –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ —á–∞–µ–≤ –ø–æ ID, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
const uniqueTeas = Array.from(new Map(allTeas.map(tea => [tea.id, tea])).values());

export const allTeaCategories: TeaCategory[] = [
    {
        name: '–í—Å–µ',
        imageUrl: 'https://picsum.photos/seed/alltea/800/400',
        teas: uniqueTeas,
    },
    ...teaCategories
];

<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <title>–ß–∞–π–Ω–∞—è –õ–∞–≤–∫–∞</title>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
      :root {
        --tg-theme-bg-color: #212121;
        --tg-theme-text-color: #ffffff;
        --tg-theme-hint-color: #aaaaaa;
        --tg-theme-link-color: #8774e1;
        --tg-theme-button-color: #589f43;
        --tg-theme-button-text-color: #ffffff;
        --tg-theme-secondary-bg-color: #181818;
      }
    </style>
  <script type="importmap">
{
  "imports": {
    "react": "https://aistudiocdn.com/react@^19.2.0",
    "react-dom/": "https://aistudiocdn.com/react-dom@^19.2.0/",
    "react/": "https://aistudiocdn.com/react@^19.2.0/",
    "@twa-dev/types": "https://aistudiocdn.com/@twa-dev/types@^8.0.2",
    "vite": "https://aistudiocdn.com/vite@^7.1.11",
    "@vitejs/plugin-react": "https://aistudiocdn.com/@vitejs/plugin-react@^5.0.4"
  }
}
</script>
<link rel="stylesheet" href="/index.css">
</head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  <script type="module" src="/index.tsx"></script>
</body>
</html>


import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

const rootElement = document.getElementById('root');
if (!rootElement) {
  throw new Error("Could not find root element to mount to");
}

const root = ReactDOM.createRoot(rootElement);
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


{
  "name": "Chinese Tea Shop",
  "description": "A Telegram Web App for browsing and ordering premium Chinese tea. Users can explore different types of Puerh tea, view detailed descriptions, and place orders directly through the app."
}

{
  "name": "tea-shop-webapp",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@twa-dev/types": "^6.9.0",
    "@types/react": "^18.2.15",
    "@types/react-dom": "^18.2.7",
    "@vitejs/plugin-react": "^4.0.3",
    "autoprefixer": "^10.4.15",
    "postcss": "^8.4.29",
    "tailwindcss": "^3.3.3",
    "typescript": "^5.0.2",
    "vite": "^4.4.5"
  }
}

export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

<div align="center">
<img width="1200" height="475" alt="GHBanner" src="https://github.com/user-attachments/assets/0aa67016-6eaf-458a-adb2-6e31a0763ed6" />
</div>

# Run and deploy your AI Studio app

This contains everything you need to run your app locally.

View your app in AI Studio: https://ai.studio/apps/temp/2

## Run Locally

**Prerequisites:**  Node.js


1. Install dependencies:
   `npm install`
2. Set the `GEMINI_API_KEY` in [.env.local](.env.local) to your Gemini API key
3. Run the app:
   `npm run dev`

/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}

{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true
  },
  "include": ["src"],
  "references": [{ "path": "./tsconfig.node.json" }]
}

{
  "compilerOptions": {
    "composite": true,
    "skipLibCheck": true,
    "module": "ESNext",
    "moduleResolution": "bundler",
    "allowSyntheticDefaultImports": true
  },
  "include": ["vite.config.ts"]
}


export interface Tea {
    id: number;
    name: string;
    type: string;
    form: string;
    rawMaterial: string;
    aging: string;
    color: string;
    bouquet: string;
    aftertaste: string;
    price: number;
    imageUrl: string;
}

export interface TeaCategory {
    name: string;
    teas: Tea[];
    imageUrl: string;
}

export interface CartItem extends Tea {
    quantity: number;
}
